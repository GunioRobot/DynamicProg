<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2009-11-15T17:00:00-07:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;I try to be pragmatic in my approach to development and one of the things that change the most are the tools I use to deliver software. There are several reasons why I change tools so often. &lt;/p&gt; &lt;ol&gt; &lt;li&gt;The evolution of the software I write call for new or different tools.&lt;/li&gt; &lt;li&gt;Search for efficiency and eliminate pain points.&lt;/li&gt; &lt;li&gt;I change my approach to software development and new methodologies need new tools.&lt;/li&gt; &lt;li&gt;I just love to try new stuff :-)&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;In this post I want to concentrate in the tools used to manage projects and builds. Until recently my favoured tools in this context consisted of NAnt, CC.Net/Hudson and Subversion.&lt;/p&gt; &lt;p&gt;For bug tracking I used the bug tracker in Google code for my OSS projects integrated to TortoiseSVN or BugTracker.Net. (Note: At work we use FogBugz and we are very happy with it.)&lt;/p&gt; &lt;h5&gt;Subversion was the first to go.&lt;/h5&gt; &lt;p&gt;Subversion is a great VCS but I usually have two problems with it. Speed and problems with complex merges. &lt;/p&gt; &lt;p&gt;When I work alone, merges are not an issue of course, but speed still is. At the same time more and more people seems to be switching to DVCS (Distributed or Decentralized) systems like Git or Mercurial. After taking a quick look at GitHub and follow their tutorials I was able to move some of my projects there in a few hours. (Most of the time spent on reading and learning from other people mistakes). &lt;/p&gt; &lt;p&gt;Git is fast, Fast, FAST! The whole idea of local commits and clone repositories is fantastic and they really help me with my workflow in the sense that I can do one or two changes, commit, one or two more, commit, find a bug, revert change, finish a story, push to GitHub. &lt;/p&gt; &lt;p&gt;To manage Git I’m using a combination of command line and graphic interface using Git gui. So far I haven’t feel the need to use/install TortoiseGit.&lt;/p&gt; &lt;p&gt;I still have some projects hosted in google code and I’m using Subversion with them, I’m thinking on switch them over to GitHub once I start working on them again.&lt;/p&gt; &lt;h5&gt;Nant followed it. &lt;/h5&gt; &lt;p&gt;I don’t have a problem with XML so the fact that Nant is XML based does not bothers me, really. But I also like the power of a good scripting language to manage repetitive tasks. I decided to move away from Nant and try to adopt some of the newest build systems. &lt;/p&gt; &lt;p&gt;I took a look at psake and them I read “&lt;a href="http://www.lostechies.com/blogs/derickbailey/archive/2009/04/08/how-a-net-developer-learned-ruby-and-rake-to-build-net-apps-in-windows.aspx" target="_blank"&gt;How a net developer learned ruby and rake to build net apps in windows&lt;/a&gt;” by &lt;a href="http://www.lostechies.com/members/derick.bailey/default.aspx"&gt;Derrick Bailey&lt;/a&gt; and that convinced me to take the plunge. &lt;/p&gt; &lt;p&gt;My knowledge of Ruby is extremely rudimentary but I even with that handicap I was able to have a &lt;a href="http://en.wikipedia.org/wiki/Rake_%28software%29" target="_blank"&gt;Rake&lt;/a&gt; build script up and running in less than 90 minutes. This script cleans the build target, create the Package folder, builds the VS solution, run Nunit test on two dll's, generate the NUnit report as an xml file, and run the migrations from Migrator.Net (that last part is not working yet, I will need to take a closer look at Migrator.Net command line args).&lt;/p&gt; &lt;p&gt;The most useful resource on Derik's post was &lt;a href="http://codebetter.com/blogs/david_laribee/archive/2008/08/25/omg-rake.aspx" target="_blank"&gt;Laribee's OMG Rake!&lt;/a&gt;. Laribee’s sample code and a few queries to Google was all I need. (No, I did not copy and paste ALL Laribee’s code, just use it as a reference)&lt;/p&gt; &lt;h5&gt;Agile Zen or project management made easy. &lt;/h5&gt; &lt;p&gt;I got a free account on &lt;a href="http://agilezen.com/" target="_blank"&gt;Agile Zen&lt;/a&gt; the first week after they went live. I remember creating the account, playing around on the Board and leaving the site. My thoughts at the moment were something like. &lt;em&gt;This is actually cool. Very nice design. Good usability. I should give it a proper test drive with some real project.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Of course, I never came back until last Friday. While working in a few features for Pronghorn I decided that it was time I stop spiking and started to write proper user stories to drive the framework. I remembered Agile Zen and went back. &lt;/p&gt; &lt;p&gt;The site looks great and there are some improvements since that last time I saw it. &lt;/p&gt; &lt;p&gt;What really amazed me is how intuitive the whole process is. There is no waste generated by using this tool. Creating stories is 1 click. Editing stories, another one. Color coding two clicks. Double click in a field to edit them, etc. Very easy, very intuitive. There is even a bar at the bottom with hints that I decided to hide and I didn’t miss it. &lt;/p&gt; &lt;p&gt;The site is very responsive and the only thing I miss is integration with a VCS system. They have a very simple API for paying accounts, but in the docs it looks like is read only, so no hooks in there (If anybody knows otherwise, please leave a comment).&lt;/p&gt; &lt;p&gt;I will keep using it for another week or so before making a final decision but so far everything indicates that I will be upgrading the account to a paying one pretty soon. (The free account only allows for one project and one developers, what is more than fair.)&lt;/p&gt; &lt;h5&gt;Tying it up all together with CI.&lt;/h5&gt; &lt;p&gt;As I mentioned before my main experience have been using CruiseControl.Net and Hudson as the CI servers. I installed TeamCity a long time ago to give it a try but I never use it. My first choice was to look for some hosted solution. After searching I only found a few and non of them worked with .Net (at least not at the moment). &lt;/p&gt; &lt;p&gt;I was going to go back once more with &lt;a href="http://hudson-ci.org/" target="_blank"&gt;Hudson&lt;/a&gt; but I wasn’t able to connect to the Hudson site to download the code. (Their site is up now). So I decided to take a new look at &lt;a href="http://www.jetbrains.com/teamcity/" target="_blank"&gt;JetBrain’s TeamCity&lt;/a&gt;. At the moment of this writing they are running the EAP for version 5. &lt;/p&gt; &lt;p&gt;I wanted to install it and use my newly crafted Rake build script with the .Net project and have my test report integrated in the dashboard. &lt;/p&gt; &lt;p&gt;First I got the msi from the daily builds for version 5.00. Double click on it to install the server and the agent and after a few minutes and two (three?) questions, the home page of the serve shows up in the browser. &lt;/p&gt; &lt;p&gt;Creating the first project and associated build profile was a breeze. I just followed along the instructions in the screen. A few times when I wasn’t sure what a given label meant, I made use of the contextual help. &lt;/p&gt; &lt;p&gt;I did have an issue but it was my fault when setting some relative path to the build file and the build target, for running test and creating the Package folder. &lt;/p&gt; &lt;p&gt;From downloading the installer to having the project building successfully took me between 10 to 15 minutes.&lt;/p&gt; &lt;h5&gt;Conclusion.&lt;/h5&gt; &lt;p&gt;This new setup makes me more productive since I have better tools that save me time in different areas like. Setting things up, working around their idiosyncrasies, configuration heavy or too verbose a language. &lt;/p&gt; &lt;p&gt;While this is a combination that works for me, yours may be completely different. The important part is to have tools that feel this roles and make sure that they are really working with and for you and not the other way around.&lt;/p&gt;</Content>
      <Created>2009-11-15T22:26:55.7964257-07:00</Created>
      <Modified>2009-11-15T22:27:38.4011181-07:00</Modified>
      <EntryId>f63b4424-be13-4d32-bc0b-6bc2e533da6b</EntryId>
      <Description />
      <Title>My new an improved tooling for builds and project management.</Title>
      <Categories>Continuous Integration;Methodology;Programming;Testing;Tools</Categories>
      <Author>hgarcia</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>