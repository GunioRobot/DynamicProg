---
layout: post
title: Validator moves to it's own package
summary: Today I move the code of LaTrompa.Validation into it’s own package, with no external dependencies (besides the framework of course). I added a class to validate XmlNodes.
categories: [Programming, Tools]
---

Today I move the code of LaTrompa.Validation into it’s own package, with no external dependencies (besides the framework of course).

I added a class to validate XmlNodes.

The string validation now has a IsOneOf method to match the string against a list of options.

{% highlight aspx-cs %}
	var options = new[] { "0056", "0256", "0512", "0752", "1100" };
	new Validator().CheckThat(() => _stringToTest)
		.IsOneOf(options).ThrowFirst();
{% endhighlight %}
    
I still need to add a generic version for this method, I guess it pass by me.

Also in the string validation there are two new validations to check if a string can be converted into an Int32 or a Boolean.

{% highlight aspx-cs %}
	new Validator().CheckThat(()=> "true")
		.CanConvertToBool().Throw();
    new Validator().CheckThat(()=>"23")
    	.CanConvertToInt32().ThrowFirst();
{% endhighlight %}

The whole conversion validation looks like a good candidate for refactoring and generalize it into a base class. that way it will be easy to offer conversion checking against all types. I added the ThrowFirst method into the Validator class. This method was available only in the CheckThat classes.

{% highlight aspx-cs %}
	var secondVariable = 45;
	var validator = new Validator();
	validator.CheckThat(() => _stringToTest)
		.HasNoSpaces().LengthLessThan(4);
	validator.CheckThat(() => secondVariable)
		.IsBetween(56, 100);
	validator.ThrowFirst();
{% endhighlight %}

I moved all the Throw methods into their own class ErrorThrower (I should rename this to ExceptionThrower). Previously I was doing almost the same thing in two different places. Not very <a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank">DRY</a>. 