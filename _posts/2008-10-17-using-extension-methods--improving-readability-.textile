---
layout: post
title: Using Extension methods- Improving readability.
summary: I consider extension methods one of the most interesting features of the .Net framework. I like it so much because It brings some of the strength of JavaScript into the framework. The possibility of write stuff like this. var percentage = 10...
---
I consider extension methods one of the most interesting features of the .Net framework. I like it so much because It brings some of the strength of JavaScript into the framework. The possibility of write stuff like this.<pre> var percentage = 10.PercentOf(100);</pre>An do stuff like this:<pre> public void OutputTabData(List<post> posts){<br>  var rowTemplate = "{0}\t{1}\t{2}\n";<br>  posts.ForEach(f =&amp;gt; Console.WriteLine(string.Format(rowTemplate, f.Title, f.Author, f.Posted)));<br> }</post></pre>With this output:<font size="1"><br>First post&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Hernan&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 17/10/2008 11:45:10 PM<br>Second post&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Diego&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 17/10/2008 11:45:10 PM<br><br></font>There are a lot of discussions about when to use extension methods and when not to. The problem is when you use extension methods instead of inheritance.<h2>Using extension methods to augment the framework or modify the language</h2>A clear choice for me is when you want to augment types, like the previous example of using PercentOf in an integer.Or what about this.<pre> Console.WriteLine(4.DaysAgo());<br> Console.WriteLine(4.YearsFromNow());<br> //14/10/2008 12:07:11 AM<br> //18/10/2012 12:07:11 AM</pre> Or what about having a handy method to get the Unix Time right from the DateTime object?<pre>var unixDate = DateTime.Now.ToUnixTime();<br>//1224303150.54688</pre>Or the other way around<pre>var date = 1224303150.54688.FromUnixTime();<br>// 18/10/2008</pre><h2>Encapsulate functionality that you always do</h2>I need to use Reflection quite a lot for one of my projects and I have a set of methods to do some very common operations, like get a value from a property, get a list of properties, etc. What if those methods where available for you in every object?<pre>var result = new MyClass().GetPropertyList();<br>foreach (var key in result.Keys){<br>&amp;nbsp;Console.WriteLine(key + " = " + result[key].ToString());<br>}<br>//<br>// _fieldOne = value of field 1<br>// _fieldTwo = value of field 2<br>//</pre>Or what about some handy string methods<pre>"There is   a   lot of white     space  in here  .    ".Squeeze();<br>//"There is a lot of white space in here."</pre>Have fun!!! <br><br>NOTE: Some of the utilities methods like Squeeze are part of the Subsonic Utilities library that I modify and turn into extension methods.