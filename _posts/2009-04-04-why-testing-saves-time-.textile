---
layout: post
title: Why testing saves time.
summary: &amp;#160;   Some of the detractors of TDD or testing in general is that you waste time writing test instead of writing “useful” code.   Well, writing test just save me a few hours of debugging. Look at this very simple class, there is an s...
---
&amp;#160;
  Some of the detractors of TDD or testing in general is that you waste time writing test instead of writing “useful” code.
  Well, writing test just save me a few hours of debugging. Look at this very simple class, there is an stupid mistake in the code.
  <div style="font-family: courier new; background: white; color: black; font-size: 10pt">   <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160;&amp;#160; 6</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> <span style="color: blue">class</span> <span style="color: #2b91af">Widget</span> : <span style="color: #2b91af">Controller</span>
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160;&amp;#160; 7</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160; {
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160;&amp;#160; 8</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> <span style="color: #2b91af">TemplateView</span> Template { <span style="color: blue">get</span>; <span style="color: blue">protected</span> <span style="color: blue">set</span>; }
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160;&amp;#160; 9</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> <span style="color: #2b91af">ICache</span> Cache { <span style="color: blue">get</span>; <span style="color: blue">private</span> <span style="color: blue">set</span>; }
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 10</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> <span style="color: blue">string</span> Key { <span style="color: blue">get</span>; <span style="color: blue">private</span> <span style="color: blue">set</span>; }
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 11</span>&amp;#160;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 12</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> Widget(<span style="color: #2b91af">ICache</span> cache, <span style="color: blue">string</span> key)
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 13</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 14</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Cache = cache;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 15</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Template = getTemplateView();
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 16</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Key = key;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 17</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 18</span>&amp;#160;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 19</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">private</span> <span style="color: #2b91af">TemplateView</span> getTemplateView()
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 20</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 21</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">return</span> <span style="color: blue">new</span> <span style="color: #2b91af">TemplateView</span> { Rendered = Cache.Get(Key) };
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 22</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 23</span>&amp;#160;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 24</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> <span style="color: blue">virtual</span> <span style="color: #2b91af">ViewContext</span> GetViewContext(<span style="color: #2b91af">ControllerContext</span> controllerContext)
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 25</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 26</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">return</span> <span style="color: blue">new</span> <span style="color: #2b91af">ViewContext</span>(controllerContext,Template,ViewData,TempData);&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 27</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 28</span>&amp;#160;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 29</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160; }
 </div>  Did you see it? Good for you! I didn’t but since I have my test and when I run it it fail.
  <div style="font-family: courier new; background: white; color: black; font-size: 10pt">   <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 12</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [<span style="color: #2b91af">Test</span>]
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 13</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> <span style="color: blue">void</span> Given_a_key_loads_the_template_from_the_cache_when_exists()
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 14</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 15</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">var</span> cache = <span style="color: #2b91af">MockRepository</span>.GenerateStub&amp;lt;<span style="color: #2b91af">ICache</span>&amp;gt;();
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 16</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">var</span> template = <span style="color: #a31515">&amp;quot;&amp;lt;div class=\&amp;quot;simpleTemplate\&amp;quot;&amp;gt;#{menuItems}&amp;lt;/div&amp;gt;&amp;quot;</span>;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 17</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; cache.Stub(c =&amp;gt; c.Get(<span style="color: #a31515">&amp;quot;menu&amp;quot;</span>)).Return(template);
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 18</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">var</span> widget = <span style="color: blue">new</span> <span style="color: #2b91af">Widget</span>(cache, <span style="color: #a31515">&amp;quot;menu&amp;quot;</span>);
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 19</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: #2b91af">Assert</span>.That(widget.Template.Rendered, <span style="color: #2b91af">Is</span>.EqualTo(template));
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 20</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }
 </div> <a href="http://blog.dynamicprogrammer.com/content/binary/WindowsLiveWriter/Whytestingsavestime_932/ScreenHunter_01%202009-04-05%2000.31.28_2.jpg"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="ScreenHunter_01 2009-04-05 00.31.28" border="0" alt="ScreenHunter_01 2009-04-05 00.31.28" src="http://blog.dynamicprogrammer.com/content/binary/WindowsLiveWriter/Whytestingsavestime_932/ScreenHunter_01%202009-04-05%2000.31.28_thumb.jpg" width="760" height="51" /></a>   &amp;#160;
  
  
  Notice that the error mention that widget.Template.Rendered was null, but I’m mocking the ICache implementation and returning the template string when Get is called with the right key.
  Upon running the test in debug the error was evident, I was calling getTemplateView before setting the Key property of the object!
  Here is the code after been fixed, changing the position of lines 15 and 16 did it.
  <div style="font-family: courier new; background: white; color: black; font-size: 10pt">   <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 12</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <span style="color: blue">public</span> Widget(<span style="color: #2b91af">ICache</span> cache, <span style="color: blue">string</span> key)
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 13</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 14</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Cache = cache;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 15</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Key = key;
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 16</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Template = getTemplateView();
    <p style="margin: 0px"><span style="color: #2b91af">&amp;#160;&amp;#160; 17</span>&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }
 </div>  The good thing is that I caught the error immediately, while the logic that I use to write the code was still fresh in my mind, so I did not spend hours trying to figure out what’s going on. Granted this is a very easy to spot issue, but believe that if you catch this error three or four days after writing the code you will spend more than the 5 minutes that took to write the unit test.
