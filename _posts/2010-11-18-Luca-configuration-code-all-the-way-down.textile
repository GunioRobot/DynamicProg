---
layout: post
title: Luca configuration, code all the way down.
summary: 
categories: [Luca, Framework, Programming, JavaScript, .Net]
published: false
---

Although I don't have a real problem with xml, I recognize the power of using a programming language to do the configuration, specially if you can use a dynamic language. 

Luca uses, wait for it....javascript for the configuration.

The configuration object has (at the moment) the following properties, with theese default values.

TODO: Put this in a Gist
Config = {
	debug: false,
	htmlTemplates: ["Prg"],
	defaultTemplate: "Txt"
};

h3. Adding custom properties.

If you need to add custom properties you create a config.js file in the root of your application.
If you want to add a new connectionString property, you will write something like this.

TODO: Put this in a Gist
Config.connectionString = "Connection string here";

If you need to change any of the default values, you just do that in the config.js file as well, like this.

TODO: Put this in a Gist
Config.debug = true;
Config.htmlTemplates = ["Mustache","Prg"]

h3. Reading the configuration from your application.

The configuration is available as a global object. You should be able to access any of the properties by simply doing.

TODO: Put this in a Gist
app.Get("home",function(req)){

	if (Config.debug) Debug("Handling a request to the home route");	
	//More code here.
}

h3. Conclusion

I'm still devating with myself how wise is the use of a global object but I think that this won't cahnge in the near future. In a future post I will explore that little "Debug" method shown in the last snipped.
