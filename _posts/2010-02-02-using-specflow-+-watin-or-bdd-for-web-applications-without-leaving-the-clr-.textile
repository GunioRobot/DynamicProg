---
layout: post
title: Using SpecFlow + WatiN or BDD for web applications without leaving the CLR.
summary: Last week I wrote about using cucumber to test your web applications outside in. In the post I showed a simple example (actually comes with cucumber) to open a browser, go to a site and perform some actions.
categories: [Programming, Tools]
---

Last week I wrote about using cucumber to test your web applications outside in. In the post I showed a simple example (actually comes with cucumber) to open a browser, go to a site and perform some actions.

I showed the same to my team at work and they mention that could be nice to been able to use c# and Visual Studio to do something similar.

After thinking about it I decided to give another try to a tool I check a few month ago. <a href="http://www.specflow.org/" target="_blank">SpecFlow</a>.

SpecFlow is a tool and a set of libraries to write specifications using <a href="http://wiki.github.com/aslakhellesoy/cucumber/gherkin" target="_blank">Gherkin</a>. You can check the <a href="http://www.specflow.org/specflow/screencast.aspx" target="_blank">screencast here</a> or read <a href="http://ryanlanciaux.com/ryanlanciaux/post/Gherkin-style-BDD-testing-in-NET.aspx" target="_blank">this post</a> from Ryan Lanciaux. SpecFlow can use either NUnit or MsTest as the engine.

Now I needed something to drive the browser. <a href="http://watin.sourceforge.net/" target="_blank">WatiN</a> is the .Net port of <a href="http://watir.com/" target="_blank">WatiR</a> and is very easy to use. The problem is that needs to run in a single thread process, so when called from inside an NUnit test we need to add the STAThreadAttribute to the Test method.

Of course, this is not a problem when you are writing the Test methods yourself but the way SpecFlow works is that the actual Test method is generated by a tool from your .feature file. 

<a href="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/001_features.png"><img border="0" alt="001_features" src="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/001_features_thumb.png" width="244" height="157"></a> 

The code looks like this (actually I edited it a little bit to make it nicer).

<a href="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/002_features.png"><img border="0" alt="002_features" src="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/002_features_thumb.png" width="609" height="344"></a> 

So you need to add the <a href="http://msdn.microsoft.com/en-us/library/system.stathreadattribute%28VS.80%29.aspx" target="_blank">STAThreadAttribute</a> to this method.

 <a href="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/003_features.png"><img border="0" alt="003_features" src="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/003_features_thumb.png" width="432" height="115"></a> 

This works great and I was able to drive the browser and write a few test in no time. The problem is that <strike>if you edit</strike> every time you edit the .feature file this class will be re-generated and you will have to re-add this attribute. (Note: <a href="http://github.com/hgarcia/SpecFlow" target="_blank">I forked the repo on GitHub</a>, made a change to the source code and sent a pull request to add this attribute by default, not sure if it will be accepted or not).

I think that the integration from SpecFlow with VS is great. If you or your team feel very strong on using VS this is a very good tool (there are versions for both VS 2008 and 2010). After writing the features and running the test you will have hints and code to copy and paste from the TestRunner into the specification class.

<a href="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/005_features.png"><img border="0" alt="005_features" src="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/005_features_thumb.png" width="729" height="351"></a> 

You will generate the specification from an item template.

<a href="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/004_features.png"><img border="0" alt="004_features" src="../../../images/posts/UsingSpecFlowWatiNorBDDforwebapplicatio_14C77/004_features_thumb.png" width="508" height="149"></a> 

h3. Conclusion:

I think that this is a great tool, specially if you are using it to develop desktop apps or library code in c#. You can use tools like R# to generate your classes and methods from the step definition class directly.

For using with WatiN or similar tools to drive the browser I will probably keep using pure cucumber with Ruby at least until the <a href="http://msdn.microsoft.com/en-us/library/system.stathreadattribute%28VS.80%29.aspx" target="_blank">STAThread</a> issue gets solved.